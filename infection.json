{
    "timeout": 100,
    "source": {
        "directories": [
            "src"
        ]
    },
    "logs": {
        "text": "./var/infection/infection.log",
        "summary": "./var/infection/infection_summary.log",
        "debug": "./var/infection/infection_debug.log",
        "badge": {
            "branch": "1.x"
        }
    },
    "mutators": {
        "@default": true,
        "LogicalOr": {
            "ignore": ["Flow\\ETL\\Transformer\\Cast\\CastEntry::__construct"]
        },
        "Throw_": {
            "ignore": [
                "Flow\\ETL\\Transformer\\Cast\\CastEntry::__construct",
                "Flow\\ETL\\Transformer\\EntryNameCaseConverterTransformer::__construct",
                "Flow\\ETL\\Transformer\\EntryNameCaseConverterTransformer::transform",
                "Flow\\ETL\\Transformer\\NativeEntryFactory::createEntry"
            ]
        },
        "BCMath": {
            "ignore": [
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryNotEqualsTo::__invoke",
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryEqualsTo::__invoke"
            ]
        },
        "DecrementInteger": {
            "ignore": [
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryNotEqualsTo::__invoke",
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryEqualsTo::__invoke"
            ]
        },
        "IncrementInteger": {
            "ignore": [
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryNotEqualsTo::__invoke",
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryEqualsTo::__invoke"
            ]
        },
        "InstanceOf_": {
            "ignore": [
                "Flow\\ETL\\Transformer\\Filter\\Filter\\EntryEqualsTo::__invoke"
            ]
        },
        "Concat": {
            "ignore": [
                "Flow\\ETL\\Transformer\\EntryNameCaseConverterTransformer::transform"
            ]
        },
        "ConcatOperandRemoval": {
            "ignore": [
                "Flow\\ETL\\Transformer\\EntryNameCaseConverterTransformer::transform"
            ]
        }
    },
    "testFramework": "phpunit",
    "bootstrap": "./vendor/autoload.php",
    "phpUnit": {
        "customPath": "tools/vendor/bin/phpunit"
    }
}